<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label2.Text" xml:space="preserve">
    <value>The app designed to simplify the tedious process of picture selection.

1. specify path to the source folder with photos.

2. specify output folder to copy images to.

3. fill in keywords. Separate them with spaces.

Make sure to include only 4 digit number of a photo.
EXAMPLE: 
Original file names: "IMG_0001.jpg", "IMG_0002.JPG", "IMG_0003.jpg".
keywords are: 0001 0002 0003

4. Pick a proper file extension or leave "all file types" (default).
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMzYAAAEACACTAgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAzAAAANggGAAAAamyhmQAAAlpJ
        REFUaIHtmU1v0zAYx/9x3Jdl6QsqjFIQZUKTQNoJoUkgIXHagU/AV9tn4LpPANIOu1WC9cAEYwOttFPb
        pWuWJo7LAZBapS9J6rRW5d+pchz7+clPntipdnBYw7pAVh2ASCiA4aqDWBDt/4+1WhklIytKRlaUjKwo
        GVlRMrJCp1149WwL1XJx5s0+5/B8DsY4LNtF27rFt4YFe+ALDzQMU2XCoBMCnRAgBZgbaVRKJp5XS/jV
        6uH4awuMcVFxhkJ4mumE4PH9AvZfPEI2tdwsTmy2vJHFm91KUsNPJHKaXTQteP/ShxIN5mYaRTMLommB
        vqWCge2tHL43e2PteSOFd3vbkeb1OceHj6cz+0SWqZ930L4ZjLXdMdJ4vfsAOSMT6P+kHJRJCiFp1rFd
        HH1pgPPgobWUzyK4ZsmwUDUbpdMfoGe7KJjjq0MpRSZF4HizKxvzOTxveknnw/mne2EyAOC4DAUEUy2T
        0ufK/O708enz5ULzC61mVJ+cUMt6iQqToZSgsJkOtDP/7y5hGQiR0QDs7dwDpcGsveraIqYIRexnRica
        jAxFubiBp5UiirnsxH7nLSt2cFGJLLP/shq6r2U7OGv2o04RG6HVbBSPMRzXmxPfPZN4eDeH929zU6/X
        Tpuo/+zOHCMRGdtxcXTSwFXPSWL4qQiVsR0XPxrXOLm4XloFGyX2RnM4BDgfwvMZbm4Z2r0BurYbO5B5
        OwAvxNlIyEZTBNLtAFaNkpEVJSMrSkZW1kpGOzisqb/OZUTJyIqSkRUlIytrJUOBpX2kT5y1WhklIyt/
        AHBUxpj73h8yAAAAAElFTkSuQmCC
</value>
  </data>
</root>